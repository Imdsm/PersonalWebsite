@model PersonalWebsite.Models.Profile.PieChartsViewModel

<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script type="text/javascript" src="https://raw.github.com/DmitryBaranovskiy/g.raphael/master/min/g.raphael-min.js"></script>
<script type="text/javascript" src="https://raw.github.com/DmitryBaranovskiy/g.raphael/master/min/g.pie-min.js"></script>

<script type="text/javascript">
window.onload = function () {            
    var zoomPie = function (self) {
        self.sector.stop();
        self.sector.scale(1.1, 1.1, self.cx, self.cy);

        if (self.label) {
            self.label[0].stop();
            self.label[0].attr({ r: 7.5 });
            self.label[1].attr({ "font-weight": 800 });
        }
    };

    var unzoomPie = function (self) {
        self.sector.animate({ transform: 's1 1 ' + self.cx + ' ' + self.cy }, 500, "bounce");

        if (self.label) {
            self.label[0].animate({ r: 5 }, 500, "bounce");
            self.label[1].attr({ "font-weight": 400 });
        }
    };

    var createPie = function (r, x, y, radius, values, keys, colors) {
        var pie = r.piechart(x, y, radius, values, { colors: colors, legend: keys, legendpos: "south", legendcolor: "#000", stroke: "#FFF8D3", strokewidth: "1" });

        pie.hover(function () {
            zoomPie(this);
        }, function () {
            unzoomPie(this);
        });
    };

    var createPieLabel = function (r, x, y, value) {
        r.text(x, y, value).attr({ font: "20px Helvetica, Arial, sans-serif" }).attr({ fill: "#000" });
    };

    var drawPieCharts = function (labels, keys, vals) {        
        var colors = ['#2ba8cb', '#68b6cb', '#8bbdcb', '#b4cdd4', '#d9dedf'];
        var labelTop = 50;
        var chartTop = 160;
        var margin = 40;
        var radius = 75;
        var start = 90;
        var offset = (radius * 2) + margin;
        
        var r = Raphael('coderbits');
        createPieLabel(r, start, labelTop, labels[0]);
        createPieLabel(r, start + offset, labelTop, labels[1]);
        createPieLabel(r, start + (offset * 2), labelTop, labels[2]);
        createPieLabel(r, start + (offset * 3), labelTop, labels[3]);
        createPie(r, start, chartTop, radius, vals[0], keys[0], colors);
        createPie(r, start + offset, chartTop, radius, vals[1], keys[1], colors);
        createPie(r, start + (offset * 2), chartTop, radius, vals[2], keys[2], colors);
        createPie(r, start + (offset * 3), chartTop, radius, vals[3], keys[3], colors);
    }

    var request = function (url) {
        var script = document.getElementsByTagName("script")[0];
        var handler = document.createElement("script");
        handler.src = url;
        script.parentNode.insertBefore(handler, script);
    };

    var global = "coderbits", element = document.getElementById(global);
    if (element) {
        window[global] = function (data) {            
            var labels = [], vals = [], keys = [];

            labels[0] = "Languages";
            vals[0] = [126, 50, 30, 24, 15];
            keys[0] = ['a %%', 'a %%', 'a %%', 'a %%', 'a %%'];

            labels[1] = "Environments";
            vals[1] = [126, 50, 30, 24, 15];
            keys[1] = ['b %%', 'b %%', 'b %%', 'b %%', 'b %%'];

            labels[2] = "Frameworks";
            vals[2] = [126, 50, 30, 24, 15];
            keys[2] = ['c %%', 'c %%', 'c %%', 'c %%', 'c %%'];

            labels[3] = "Tools";
            vals[3] = [126, 50, 30, 24, 15];
            keys[3] = ['d %%', 'd %%', 'd %%', 'd %%', 'd %%'];

            drawPieCharts(labels, keys, vals);

            delete window[global];
        };
        var username = element.getAttribute("data-coderbits-username"),
			safeUsername = username.replace(/[('"){};!@#%&*]/gi, '');
		request("https://coderbits.com/" + safeUsername + ".json?callback=" + global);
    }
}
</script>

<section id="coderbits" data-coderbits-username="imdsm"></section>